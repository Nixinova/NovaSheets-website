function run(rawInput="",novasheets){return parse(prepare(rawInput),novasheets)}function prepare(rawInput=""){let externalSheets,inlineSheets,stylesheetContents=[],sources=[];if(rawInput)stylesheetContents=[rawInput.toString()],sources=["raw"];else{externalSheets=Array.from(document.querySelectorAll('link[rel="novasheet" i], link[rel="novasheets" i]')),inlineSheets=Array.from(document.querySelectorAll('[type="novasheet" i], [type="novasheets" i]'));let fileNames={full:[],rel:[]};for(let sheet of externalSheets)fileNames.full.push(sheet.href),fileNames.rel.push(sheet.href);for(let i in fileNames.full){let req=new XMLHttpRequest;if(req.open("GET",fileNames.full[i],!1),req.send(),404==req.status)throw 404;let response=req.responseText;stylesheetContents.push(response),sources.push(fileNames.rel[i])}for(let contents of inlineSheets){let content=contents instanceof HTMLInputElement&&contents.value||contents.innerHTML||contents.innerText;stylesheetContents.push(content.replace(/^\s*`|`\s*$/,"")),sources.push("inline")}}return{rawInput:rawInput,stylesheetContents:stylesheetContents,sources:sources}}function parse({rawInput:rawInput,stylesheetContents:stylesheetContents,sources:sources},NovaSheets){const r=String.raw,strim=str=>str.replace(/^\s*(.+?)\s*$/,"$1").replace(/\s+/g," "),hashCode=(str,length=8)=>{let hash=0;for(let i=0;i<str.length;i++)hash=(hash<<5)-hash+str.charCodeAt(i);return Math.abs(hash).toString(16).substring(0,length).padStart(length,"0")},escapeRegex=str=>str.replace(/[.*+?^/${}()|[\]\\]/g,"\\$&");for(let s in stylesheetContents){const number=r`(?:[0-9]*\.?[0-9]+)`,basedNumber=r`(?:-?(?:0x[0-9a-f]*\.?[0-9a-f]+|0b[01]*\.?[01]+|0o[0-7]*\.?[0-7]+|${number}))`,numberUnit=r`\s*(?:em|rem|en|ex|px|pt|pc|cm|mm|m(?![ms])|ft|in|s|ms)`,mathChecker=()=>{const o=r`\(\s*`,c=r`\s*\)`,numberValue=r`(?:-?${basedNumber}(?:${numberUnit})?)`,operators=r`(?:[-^*/+]+\s*(?=\d|\.))`;let unbracketed=r`(?:(?:${`(?:${o}${numberValue}${c}|${numberValue})`}\s*${operators}\s*)+${numberValue})`;return r`\(\s*${unbracketed}\s*\)|${unbracketed}`},toNumber=val=>constants.KEEP_NAN?Number(val):isNaN(Number(val))?"":Number(val),parseFunction=function(name,func,{nonest:nonest,notrim:notrim,allargs:allargs}={}){const match=cssOutput.match(RegExp(r`\$\(\s*(?:${name})\b`));if(!match)return;const searchString=cssOutput.substr(cssOutput.indexOf(match[0]));let hasBrackets,segment="",brackets=0;for(let i=0;i<searchString.length&&(segment+=searchString[i],brackets>0&&(hasBrackets=!0),"("===searchString[i]&&brackets++,")"===searchString[i]&&brackets--,!hasBrackets||0!==brackets);i++)if(i==searchString.length-1&&brackets>0)return;if(!segment.trim()||nonest&&segment.match(/.+\$\(/))return;const replacer=r`^\$\(${notrim?"|":r`\s*|\s*`}\)$`,splitter=notrim?"|":/\s*\|\s*/;let parts=segment.replace(RegExp(replacer,"g"),"").split(splitter);for(let i=0;i<constants.MAX_ARGUMENTS;i++)null==parts[i]&&(parts[i]="");if(!allargs)for(let i=+constants.MAX_ARGUMENTS;i>0;i--)if(parts[+i]){parts=parts.slice(0,i+1);break}parts[0]=segment,cssOutput=cssOutput.replace(segment,func(...parts))};stylesheetContents[s]=stylesheetContents[s].replace(/&amp;/g,"&").replace(/&gt;/g,">").replace(/&lt;/g,"<").replace(/(?<![a-z]+:)\n?\/\/.*$/gm,"").replace(/(?:@var.+?=.*$|@var\s*[^=]*(?=\n\s*@var\s.))(?!\n\s*@endvar)/gm,"$& @endvar").replace(/@(var|const|endvar)/g,"\n$&").replace(/@option\s*[A-Z_]+\s*(true|false|[0-9]+)|@endvar/g,"$&\n");let lines=stylesheetContents[s].split("\n"),cssOutput="",commentedContent=[],staticContent=[];for(let i in lines)lines[i]=lines[i].replace(/[\r\n]/g," "),cssOutput+="\n"+lines[i];cssOutput=cssOutput.replace(/\s*(?:@var.*?((?=@var)|@endvar)|@option\s*[A-Z_]+\s*(true|false|[0-9]+))/gms," ").replace(/\/\*(.+?)\*\//gs,((_,a)=>_.startsWith("/*[")&&_.endsWith("]*/")?_.replace(/^\/\*\[(.+)\]\*\/$/,"/*$1*/"):_.startsWith("/*/")||_.endsWith("/*/")?_:(commentedContent.indexOf(a)<0&&commentedContent.push(a),"/*COMMENT#"+commentedContent.indexOf(a)+"*/"))).replace(/\/\*\/(.+?)\/\*\//gs,((_,a)=>(staticContent.indexOf(a)<0&&staticContent.push(a),"/*STATIC#"+staticContent.indexOf(a)+"*/")));let customVars={},cssBlocks={};const constants={BUILTIN_FUNCTIONS:!0,DECIMAL_PLACES:!1,KEEP_NAN:!1,KEEP_UNPARSED:!1,MAX_ARGUMENTS:10,MAX_MATH_RECURSION:5,MAX_RECURSION:50};for(let i in lines){let matcher;if(lines[i].match(/^\s*@var\s/)){let varDeclParts=lines[i].replace(/^\s*@var\s/,"").split("="),linesAfter=lines.slice(+i),varEnding;for(let j in linesAfter)if(linesAfter[j].match(/^\s*@endvar\s*$|^\s*@var\s/)&&0!=+j){varEnding=+j;break}let varName=varDeclParts[0].trim().split("|")[0].trim();const inlineContent=varDeclParts.slice(1).join("=")||"",blockContent=linesAfter.slice(1,varEnding).join("\n"),varRegex=new RegExp(r`\$\(\s*${varName}\s*\)`,"g");let varContent=(inlineContent+blockContent).trim().replace(varRegex,customVars[varName]||"");customVars[varName]=varContent}else if(lines[i].match(matcher=/^\s*@option\s+/)){let[name,val]=lines[i].replace(matcher,"").split(/\s+/);const isNotFalse=val=>"0"!==val&&"false"!==val;switch(name.toUpperCase()){case"BUILTIN_FUNCTIONS":constants.BUILTIN_FUNCTIONS=isNotFalse(val);break;case"DECIMAL_PLACES":constants.DECIMAL_PLACES="false"!==val&&+val;break;case"KEEP_NAN":constants.KEEP_NAN=isNotFalse(val);break;case"KEEP_UNPARSED":constants.KEEP_UNPARSED=isNotFalse(val);break;case"MAX_ARGUMENTS":constants.MAX_ARGUMENTS=parseInt(val);break;case"MAX_MATH_RECURSION":constants.MAX_MATH_RECURSION=parseInt(val);break;case"MAX_RECURSION":constants.MAX_RECURSION=parseInt(val)}}}cssOutput.replace(/([^{}]+)({.+?})/gms,((_,selector,css)=>(selector.includes("$(")||selector.startsWith("@")||(cssBlocks[escapeRegex(selector.trim().replace(/>/g,":GT:"))]=css),"")));const hasNovaSheetsStyles=content=>content.includes("$(")||RegExp(mathChecker()).test(content)||/&%</.test(content);for(let loop=0,lastCssOutput;(loop<1||loop<constants.MAX_RECURSION&&hasNovaSheetsStyles(cssOutput))&&lastCssOutput!==cssOutput;loop++){lastCssOutput=cssOutput;for(let name in cssBlocks)cssOutput=cssOutput.replace(new RegExp(r`\$<\s*${name.replace(/:GT:/g,">")}\s*>`),cssBlocks[name]||"{}");cssOutput=cssOutput.replace(/\$<.+?>/g,"{}"),cssOutput=cssOutput.replace(/(?<!#)\b(\d+)\s*[Ee]\s*(-?\d+)/g,((_,a,b)=>String(+a*10**+b)));for(let i=0;i<constants.MAX_MATH_RECURSION&&cssOutput.match(RegExp(mathChecker()));i++)cssOutput=cssOutput.replace(RegExp(mathChecker(),"g"),(mathMatch=>{let matchesOnlyBrackets=!mathMatch.match(/[-+Ee^*/]/),containsUnitList=mathMatch.match(RegExp(r`${numberUnit}\s-?${basedNumber}`));if(matchesOnlyBrackets||containsUnitList)return mathMatch;let numMatch=mathMatch.match(RegExp(numberUnit,"g"))||[],unit=numMatch.pop()||"",content=mathMatch.replace(RegExp(r`(${number})\s*(${numberUnit})`,"g"),((_,num,u)=>{switch(u){case"mm":case"ms":return unit=u[1],String((toNumber(num)||0)/1e3);case"cm":return unit="m",String((toNumber(num)||0)/100);case"in":return unit="m",String(.0254*(toNumber(num)||0));case"ft":return unit="m",String(.3048*(toNumber(num)||0));default:return _}})).replace(RegExp(numberUnit,"g"),"").replace(/--|\+\+/g,"+").replace(/\^/g,"**");try{return eval(content)+unit}catch{return content+unit}}));for(let name in customVars)parseFunction(name,((_,...paramArgs)=>{let content=customVars[name];for(let i in paramArgs){if(!paramArgs[i])continue;let parts=paramArgs[i].split("="),param=parts[1]?strim(parts[0]):+i+1,arg=parts[1]?strim(parts[1]):strim(parts[0]);content=content.replace(RegExp(r`\$\[${param}[^\]]*\]`,"g"),arg)}return content=content.replace(/\$\[.*?(?:\|([^\]]*))?\]/g,"$1"),content}));for(let i=0,lastOutput;cssOutput.indexOf("%")>-1&&i++<constants.MAX_RECURSION&&cssOutput!==lastOutput;i++){lastOutput=cssOutput;const selector=/([^{}|()]+?){[^{}]*?}[^{}]*?%[^{}]*?{/g;if(!cssOutput.match(selector))break;cssOutput=cssOutput.replace(selector,((_,a)=>a.includes("%")?_:_.replace(/(?<!\d)%/g,strim(a))))}for(let i=0,lastOutput;cssOutput.indexOf("&")>-1&&i++<constants.MAX_RECURSION&&cssOutput!==lastOutput;i++){lastOutput=cssOutput;const selector=/([^{}|()]+?){[^{}]*?}([^{}]*?&[^{}?]*?{[^{}]*})+/g;if(!cssOutput.match(selector))break;cssOutput=cssOutput.replace(selector,((_,a)=>a.includes("&")?_:_.replace(/&/g,strim(a)+(a.match(/(?<!\d)%/)?"<":""))))}for(let i=0,lastOutput;cssOutput.indexOf("<")>-1&&i++<constants.MAX_RECURSION&&cssOutput!==lastOutput;i++){lastOutput=cssOutput;const selector=/[>+~\s]\s*[^&%{}>+~\s<]+\s*</g;if(!cssOutput.match(selector))break;cssOutput=cssOutput.replace(selector,"")}cssOutput=cssOutput.replace(/{([^{}]*?)}\s*<([^[\]]*?)>/gm,((_,css,item)=>{const statements=css.split(/\s*;\s*/);for(let i in statements){const[attr,val]=statements[i].split(/\s*:\s*/);if(attr.trim()===item.trim())return val||""}return""})),cssOutput=cssOutput.replace(/{([^{}]*?)}\s*!/gm,((_,css)=>css)),cssOutput=cssOutput.replace(/([^{}]*?)\s*@\s*(?:(\d+px)(?:\s*\.{2,})?(\s*\d+px)?|(\d+px)?(?:\s*\.{2,})?(\s*\d+px))([^{}]*?){(.*?)}/gm,((_,sel,min1,max1,min2,max2,selAfter,block)=>{let[min,max]=[min1||min2,max1||max2],simpBrkpRegex=r`@\s*(\d+px)?\s*(?:\.{2,})?\s*(\d+px)?`,selMatch=selAfter.match(RegExp(simpBrkpRegex,"g"));selMatch&&([,min,max]=selMatch[selMatch.length-1].match(RegExp(simpBrkpRegex)));let query="only screen";return min&&(query+=` and (min-width: ${min})`),max&&(query+=` and (max-width: ${max}-1px)`),`@media ${query} { ${(sel+selAfter).replace(RegExp(simpBrkpRegex,"g"),"")} { ${block} } }`}));let allFunctions=[];if(constants.BUILTIN_FUNCTIONS){const builtinFunctions=addBuiltInFunctions({constants:constants});allFunctions.push(...builtinFunctions)}const customFunctions=NovaSheets?.getFunctions()||[];allFunctions.push(...customFunctions);for(let obj of allFunctions)parseFunction(obj.name,obj.body)}if(!constants.KEEP_UNPARSED){cssOutput=cssOutput.replace(/@endvar/g,"");let unparsedContent=cssOutput.match(/\$[[(](.+?)[\])]/g);if(unparsedContent)for(let val of unparsedContent){let nssVarName=strim(val.replace(/\$[[(](.*?)(\|.*)?[\])]/,"$1"));cssOutput=cssOutput.replace(val,"");let type=val.includes("$(")?"variable":"argument";console.log(`<NovaSheets> Instances of unparsed ${type} "${nssVarName}" have been removed from the output.`)}}cssOutput=cssOutput.replace(/(\s*;)+/g,";").replace(/(?<!^ *) +/gm," ").replace(/(?<![1-9]+)(0\.\d+)(?=m|s)/,((_,n)=>1e3*Number(n)+"m")).replace(/(?<=\d)0mm/g,"cm").replace(/(?<=\d)(000mm|00cm)/g,"m").replace(/\.?0{10,}\d/g,"").replace(/((\d)\2{9,})\d/g,"$1").replace(/(\d+)([5-9])\2{10,}\d?(?=\D)/g,((_,a)=>String(+a+1))).replace(RegExp(r`((\d)\.\d{0,${constants.DECIMAL_PLACES}})(\d?)\d*`),((_,val,pre,after)=>{const roundsUp=/[5-9]$/.test(after);return console.log(384,[_,val,roundsUp,pre,after]),0===constants.DECIMAL_PLACES?roundsUp?parseInt(pre)+1:pre:roundsUp?val.replace(/.$/,"")+(parseInt(val.substr(-1))+1):val})).replace(/}\s*}/g,"}\n}");for(let i in staticContent)cssOutput=cssOutput.replace(RegExp(r`\/\*STATIC#${i}\*\/`,"g"),strim(staticContent[i]));for(let i in commentedContent)cssOutput=cssOutput.replace(RegExp(r`\/\*COMMENT#${i}\*\/`,"g"),"/*"+commentedContent[i]+"*/");if(rawInput)return cssOutput.trim();{if(document.querySelectorAll(`[data-hash="${hashCode(cssOutput)}"]`).length)break;let styleElem=document.createElement("style");styleElem.innerHTML="\n"+cssOutput.trim()+"\n",styleElem.dataset.hash=hashCode(cssOutput),styleElem.dataset.source=sources[s],(document.head||document.body).appendChild(styleElem)}}}const parseNovaSheets=run;function addBuiltInFunctions({constants:constants}){const novasheets=new("undefined"!=typeof require?require("./novasheets"):NovaSheets),escapeRegex=str=>str.replace(/[.*+?^/${}()|[\]\\]/g,"\\$&"),strim=str=>str.toString().replace(/^\s*(.+?)\s*$/,"$1").replace(/\s+/g," "),r=String.raw;novasheets.addFunction("@each",((_,a="",b="",c="",...d)=>{d=d.join("|");let[items,splitter,joiner,content]=d?[a,b,c,d]:c?[a,b,b,c]:[a,",",",",b],arr=strim(items).split(strim(splitter)),output=[];for(let i in arr){let parsed=strim(content).replace(/\$i/gi,Number(i)+1).replace(/\$v\[([0-9]+)([-+*/][0-9]+)?\]/g,((_,a,b)=>arr[eval(Number(a-1)+(b||0))])).replace(/.?\s*undefined/g,"").replace(/\$v/gi,arr[i]);output.push(parsed)}return output.join(joiner)}),{notrim:!0}),novasheets.addFunction("@repeat",((_,a,...b)=>{let delim,content,num=a;b[1]?[delim,content]=[b[0],b.slice(1).join("|")]:[delim,content]=["",b.join("|")];let output="";for(let i=0;i<Number(num);i++)output+=(i>0?delim:"")+content.replace(/\$i/gi,Number(i)+1);return output}));const number=r`(?:[0-9]*\.?[0-9]+)`,basedNumber=r`(?:0x[0-9a-f]*\.?[0-9a-f]+|0b[01]*\.?[01]+|0o[0-7]*\.?[0-7]+|${number})`,toNumber=val=>constants.KEEP_NAN?Number(val):isNaN(Number(val))?"":Number(val),testNaN=(arg,def)=>{let test=!arg||arg===1/0||Number.isNaN(arg);return test&&constants.KEEP_NAN?"NaN":test&&!constants.KEEP_NAN?def||0:arg};novasheets.addFunction("@e",(()=>Math.E)),novasheets.addFunction("@pi",(()=>Math.PI)),novasheets.addFunction("@mod",((_,a,b)=>testNaN(a%b,_))),novasheets.addFunction("@sin",((_,a)=>testNaN(Math.sin(a),_))),novasheets.addFunction("@asin",((_,a)=>testNaN(Math.asin(a),_))),novasheets.addFunction("@cos",((_,a)=>testNaN(Math.cos(a),_))),novasheets.addFunction("@acos",((_,a)=>testNaN(Math.acos(a),_))),novasheets.addFunction("@tan",((_,a)=>testNaN(Math.tan(a),_))),novasheets.addFunction("@atan",((_,a)=>testNaN(Math.atan(a),_))),novasheets.addFunction("@abs",((_,a)=>testNaN(Math.abs(a),_))),novasheets.addFunction("@floor",((_,a)=>testNaN(Math.floor(a),_))),novasheets.addFunction("@ceil",((_,a)=>testNaN(Math.ceil(a),_))),novasheets.addFunction("@percent",((_,a)=>testNaN(100*toNumber(a)+"%",_))),novasheets.addFunction("@log",((_,base,num)=>testNaN(Math.log(num)/(base?Math.log(base):1),_))),novasheets.addFunction("@root",((_,a,b)=>testNaN(Math.pow(b||a,1/(b?a:2)),_))),novasheets.addFunction("@round",((_,a,b)=>{let num=toNumber(a)+Number.EPSILON,dp=Math.pow(10,b||0);return testNaN(Math.round(num*dp)/dp,_)})),novasheets.addFunction("@min|@max",((_,...a)=>{let nums=[];for(let item of a)item&&nums.push(item);let output=Math[_.includes("@min")?"min":"max"](...nums);return testNaN(output,_)})),novasheets.addFunction("@clamp",((_,a,b,c)=>{let val=Number(a),min=Number(b),max=Number(c);return max<min&&([min,max]=[max,min]),testNaN(val<=min?min:val>=max?max:val,_)})),novasheets.addFunction("@degrees",((_,a)=>{let[num,type]=[a.replace(/[a-z]+/,""),a.replace(RegExp(number),"")];if("grad"===type)return.9*num;let output=num/Math.PI*180;return testNaN(output,_)})),novasheets.addFunction("@radians",((_,a)=>{let[num,type]=[a.replace(/[a-z]+/,""),a.replace(RegExp(number),"")];if("grad"===type)return num*Math.PI/200;let output=num*Math.PI/180;return testNaN(output,_)})),novasheets.addFunction("@gradians",((_,a)=>{let[num,type]=[a.replace(/[a-z]+/,""),a.replace(RegExp(number),"")];return"rad"===type?num/Math.PI*200:testNaN(num/.9,_)})),novasheets.addFunction("@lowercase",((_,a)=>a.toLowerCase())),novasheets.addFunction("@uppercase",((_,a)=>a.toUpperCase())),novasheets.addFunction("@titlecase",((_,a)=>a.replace(/\b\w/g,(a=>a.toUpperCase())))),novasheets.addFunction("@capitali[sz]e",((_,a)=>a[0].toUpperCase()+a.substr(1))),novasheets.addFunction("@uncapitali[sz]e",((_,a)=>a[0].toLowerCase()+a.substr(1))),novasheets.addFunction("@extract",((_,a,b,c)=>a.split(c?b:",")[toNumber(c||b)-1]||"")),novasheets.addFunction("@encode",((_,a)=>encodeURIComponent(a))),novasheets.addFunction("@length",((_,a)=>strim(a).length)),novasheets.addFunction("@replace",((_,...args)=>{args.length<3&&(args=[args[0],args[1]||"",args[2]||""]),args=args.slice(0,args.indexOf("")<=3?3:args.indexOf(""));let text=strim(args[0]),finder=strim(args.slice(1,-1).join("|")),replacer=strim(args.slice(-1)[0]),isRegex=finder.startsWith("/");if(isRegex){let parts=strim(finder).match(/\/(.+?)\/([gimusy]*)/).slice(1);finder=RegExp(parts[0],parts[1]||"s")}return text.replace(isRegex?finder:RegExp(escapeRegex(finder),"g"),replacer)}),{notrim:!0,allargs:!0});const toPercent=val=>Math.floor(Number(val)/255*100),fromPercent=val=>Math.ceil(255*Number(val.replace("%",""))/100),toHex=val=>Number(val).toString(16).padStart(2,"0"),rgbFromHex=(hex,alpha)=>{let num=parseInt(hex.replace(/#?(.{0,8})$/,"$1"),16),r=num>>16&255,g=num>>8&255,b=255&num,a=alpha?toPercent(parseInt(alpha,16)):null;return null===a?`rgb(${r}, ${g}, ${b})`:`rgba(${r}, ${g}, ${b}, ${a})`},parseHex=val=>{let a=val.replace("#","");switch(a.length){case 0:return rgbFromHex("000000","00");case 1:return rgbFromHex(a.repeat(6));case 2:return rgbFromHex(a[0].repeat(6),a[1].repeat(2));case 3:return rgbFromHex(a[0]+a[0]+a[1]+a[1]+a[2]+a[2]);case 4:return rgbFromHex(a[0]+a[0]+a[1]+a[1]+a[2]+a[2],a[3]+a[3]);default:return rgbFromHex(a.substr(0,6).padEnd(6,"0"),a.substr(6,2)||null)}},getRawColorParts=col=>col.replace(/^\s*\w{3}a?\s*\(\s*|\s*\)$/g,"").split(/,\s*/),getColorParts=color=>{let parts=getRawColorParts(color.startsWith("#")?parseHex(color):color);for(let i in parts){let num=parts[i];parts[i]?parts[i].includes("%")?(num=num.replace("%",""),color.includes("hsl")?parts[i]=""+Math.round(num/100*(0===i?360:100)):parts[i]=""+fromPercent(num)):3===i&&(parts[i]=Math.round(color.includes("rgb")?num/255:num/100)):parts[i]=0}return parts},hexFromRgb=rgb=>{let[r,g,b,a]=Array.isArray(rgb)?rgb:getColorParts(rgb);return"#"+toHex(r)+toHex(g)+toHex(b)+(a>0?toHex(a):"")},blendColors=(color1,color2,amt)=>{if(!color2)return color1||"";let type=color1.match(/^[a-z]{3}a?|^#/).toString(),amount=Math.abs(amt.toString().includes("%")?amt.replace("%","")/100:amt);amount=amount>1?1:amount;const blendVal=(a,b)=>Math.floor(toNumber(a)*(1-amount)+toNumber(b)*amount);let[[r1,g1,b1,a1],[r2,g2,b2,a2]]=[getColorParts(color1),getColorParts(color2)],[r,g,b,a]=[blendVal(r1,r2),blendVal(g1,g2),blendVal(b1,b2),blendVal(a1,a2)];switch(type){case"rgba":return`rgba(${r}, ${g}, ${b}, ${a})`;case"rgb":return`rgb(${r}, ${g}, ${b})`;case"hsla":return`hsla(${r%360}, ${g/100}%, ${b/100}%, ${a})`;case"hsl":return`hsla(${r%360}, ${g/100}%, ${b/100}%)`;case"#":return hexFromRgb([r,g,b,a]);default:return`${type}(${r}, ${g}, ${b})`}},blendGrayscaleHsl=(type,color1,color2,amt)=>{if(!color1.includes("hsl"))return blendColors(color1,color2,amt||.5);let[h,s,l,a]=getColorParts(color1),amount=amt.replace("%",""),sNew=toNumber(s)-toNumber(amount),lNew=toNumber(l)+toNumber(amount)*("darken"===type?-1:1),sl="desat"===type?`${sNew}%, ${l}%`:`${s}%, ${lNew<0?0:lNew}%`;return`${color1.match(/^hsla?/)}(${h%360}, ${sl}${a?`, ${a}`:""})`};novasheets.addFunction("@colou?r",((_,type,a="0",b="0",c="0",d="")=>{switch(/#|rgba?|hsla?/i.test(a)?(a.includes("#")&&(a=parseHex(a)),/rgba?|hsla?/.test(a)&&([a,b,c,d]=getColorParts(a))):[a,b,c,d]=getColorParts(`${type}(${a}, ${b}, ${c}, ${d})`),type=type.toLowerCase()){case"#":case"hash":case"hex":case"hexadecimal":return"#"+toHex(a)+toHex(b)+toHex(c)+(d?toHex(fromPercent(d)):"");case"rgb":return`rgb(${a}, ${b}, ${c})`;case"rgba":return`rgba(${a}, ${b}, ${c}, ${d||0===d?100:""}%)`;case"hsl":return`hsl(${a%360}, ${b}%, ${c}%)`;case"hsla":return`hsla(${a%360}, ${b}%, ${c}%, ${d||0===d?100:""}%)`;default:return`${type}(${a} ${b} ${c}${d?` / ${d}`:""})`}})),novasheets.addFunction("@colou?rpart",((_,a="",b="")=>{let[part,color]=[a.toLowerCase(),b.toLowerCase()],parts=getColorParts(color);return{r:parts[0],h:parts[0],g:parts[1],s:parts[1],b:parts[2],l:parts[2],a:parts[3]}[part[0]]||color})),novasheets.addFunction("@spin",((_,color,amount)=>{let oldHue=color.replace(/^hsla?\s*\((\d+),\s*.+\s*\)\s*$/g,"$1"),newHue=(toNumber(oldHue)+toNumber(amount||0))%360;return color.replace(oldHue,newHue)})),novasheets.addFunction("@blend",((_,color1,color2,amount=.5)=>blendColors(color1,color2,amount))),novasheets.addFunction("@tint|@lighten",((_,color,amount=.5)=>blendGrayscaleHsl("lighten",color,"#fff",amount))),novasheets.addFunction("@shade|@darken",((_,color,amount=.5)=>blendGrayscaleHsl("darken",color,"#000",amount))),novasheets.addFunction("@tone|@desaturate",((_,color,amount=.5)=>blendGrayscaleHsl("desat",color,"#808080",amount)));const parseLuma=(arg,rgb)=>{if(!arg.startsWith("rgb")&&!arg.startsWith("#"))return arg;let[r,g,b]=rgb?[...rgb]:getColorParts(arg);const getLuma=a=>a<=.03928?a/12.92:(a=>((a+.055)/1.055)**2.4)(a);return.2126*getLuma(r/255)+.7152*getLuma(g/255)+.0722*getLuma(b/255)};novasheets.addFunction("@luma",((_,color)=>parseLuma(color))),novasheets.addFunction("@contrast",((_,color,light="",dark="")=>parseLuma(color)<.5?light:dark)),novasheets.addFunction("@gr[ae]yscale",((_,color)=>{if(color.startsWith("hsl"))return color.replace(/^(hsla?)\s*\(\s*(\d+),\s*(\d+)/,"$1($2, 0");let gray=Math.round(255*parseLuma(color)),newColor=`rgb(${Array(3).fill(gray).join(", ")})`;return color.startsWith("#")?hexFromRgb(newColor):newColor}));const bracketedNumber=r`(?:\(\s*${basedNumber}\s*\)|${basedNumber})`,parseLogic=arg=>{for(let i=0;i<constants.MAX_ARGUMENTS/10;i++)arg=strim(arg).replace(/(?:'(.+?)'|"(.+?)")+/,"$1$2").replace(/\bor\b/gi,"||").replace(/\band\b/gi,"&&").replace(/\bnot\b/gi,"!").replace(/(.+?)\bnor\b(.+)?/gi,"!($1) && !($2)").replace(/(.+?)\bnand\b(.+)?/gi,"!($1) || !($2)").replace(/(.+?)\bxor\b(.+)?/gi,"($1 && !($2)) || (!($1) && $2)").replace(/(.+?)\bxnor\b(.+)?/gi,"$1 == $2").replace(/(?!=)(!?)=(==)?(?!=)/g,"$1$2==");return arg.match(/(<|<=|>|>=|==|!=|&|\||!)/)&&(arg=eval(arg)),["false","undefined","null","NaN",""].includes(arg)&&(arg=!1),arg},logicRegex=arg=>RegExp(r`([+-]?${bracketedNumber})\s*(?:${arg})\s*([+-]?${bracketedNumber})`);return novasheets.addFunction("@bitwise",((_,a)=>{let arg=a.replace(/&amp;/g,"&").replace(/&gt;/g,">").replace(/&lt;/g,"<");for(let i=0;i<constants.MAX_ARGUMENTS/10;i++)arg=arg.replace(RegExp(r`(?:~|!|not)\s*([+-]?${bracketedNumber})`),((_,a)=>eval("~"+toNumber(a)))).replace(logicRegex("or|\\|"),((_,a,b)=>eval(`(${toNumber(a)}) | (${toNumber(b)})`))).replace(logicRegex("nor"),((_,a,b)=>eval(`~ (${toNumber(a)}) | (${toNumber(b)})`))).replace(logicRegex("and|&"),((_,a,b)=>eval(`(${toNumber(a)}) & (${toNumber(b)})`))).replace(logicRegex("nand"),((_,a,b)=>eval(`~ (${toNumber(a)}) & (${toNumber(b)})`))).replace(logicRegex("xor"),((_,a,b)=>eval(`(${toNumber(a)}) ^ (${toNumber(b)})`))).replace(logicRegex("xnor"),((_,a,b)=>eval(`~ (${toNumber(a)}) ^ (${toNumber(b)})`)));return arg})),novasheets.addFunction("@boolean",((_,a)=>parseLogic(a))),novasheets.addFunction("@if",((_,a,b="",c="")=>parseLogic(a)?b:c)),novasheets.addFunction("@breakpoint",((_,a=0,b="",c="",d="")=>{if(!a)return _;const makeQuery=(type,width,content)=>`@media (${type}-width: ${width.trim()}${"max"===type?"-1px":""}) { ${content}}`;let isBlock=(b+c).includes("{"),content=isBlock?[b,c]:[`${b} {${c}} `,`${b} {${d}} `],ltContent=(isBlock?b:c).trim()?makeQuery("max",a,content[0]):"",gtContent=(isBlock?c:d).trim()?makeQuery("min",a,content[1]):"";return ltContent+(ltContent&&gtContent?"\n":"")+gtContent}),{notrim:!0}),novasheets.addFunction("@prefix",((_,a,b)=>`-webkit-${a}: ${b}; -moz-${a}: ${b}; -ms-${a}: ${b}; -o-${a}: ${b}; ${a}: ${b};`),{nonest:!0}),novasheets.getFunctions()}class NovaSheets{constructor(){this.functions=[]}static parse(rawInput="",novasheets){return parse_1.default(rawInput,novasheets)}static compile(input,output="",novasheets=new NovaSheets){return compile_1.default(input,output,novasheets)}addFunction(name,body,options){return this.functions.push({name:name,body:body,options:options}),this}getFunctions(){return this.functions}}function compileNovaSheets(){}const parse_1={default:parse},compile_1={default:compileNovaSheets};document.addEventListener("DOMContentLoaded",(()=>parseNovaSheets()));